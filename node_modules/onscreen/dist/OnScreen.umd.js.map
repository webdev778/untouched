{"version":3,"file":"OnScreen.umd.js","sources":["../lib/methods/attach.js","../lib/helpers/insideViewport.js","../lib/helpers/scrollHandler.js","../lib/methods/debouncedScroll.js","../lib/methods/destroy.js","../lib/methods/off.js","../lib/methods/on.js","../lib/helpers/observeDOM.js","../lib/index.js"],"sourcesContent":["/**\n * Attaches the scroll event handler\n *\n * @return {void}\n */\nfunction attach() {\n    const container = this.options.container;\n\n    if (container instanceof HTMLElement) {\n        const style = window.getComputedStyle(container);\n\n        if (style.position === 'static') {\n            container.style.position = 'relative';\n        }\n    }\n\n    container.addEventListener('scroll', this._scroll);\n    window.addEventListener('resize', this._scroll);\n    this._scroll();\n    this.attached = true;\n}\n\nexport default attach;\n","/**\n * Checks an element's position in respect to the viewport\n * and determines wether it's inside the viewport.\n *\n * @param {node} element The DOM node you want to check\n * @return {boolean} A boolean value that indicates wether is on or off the viewport.\n */\nfunction insideViewport(el, options = { tolerance: 0, container: window }) {\n    if (!el) return false;\n\n    if (typeof el === 'string') {\n        el = document.querySelector(el);\n    }\n    if (typeof options === 'string') {\n        options = { container: document.querySelector(options) };\n    }\n\n    let visible;\n    const elRect = el.getBoundingClientRect();\n\n    if (options.container === window) {\n        visible = (\n            // Check bottom boundary\n            elRect.bottom - options.tolerance > 0 &&\n\n            // Check right boundary\n            elRect.right - options.tolerance > 0 &&\n\n            // Check left boundary\n            elRect.left + options.tolerance < (window.innerWidth ||\n            document.documentElement.clientWidth) &&\n\n            // Check top boundary\n            elRect.top + options.tolerance < (window.innerHeight ||\n            document.documentElement.clientHeight)\n        );\n    } else {\n        const containerRect = options.container.getBoundingClientRect();\n\n        visible = (\n            // // Check bottom boundary\n            (el.offsetTop + el.clientHeight) - options.tolerance >\n            options.container.scrollTop &&\n\n            // Check right boundary\n            (el.offsetLeft + el.clientWidth) - options.tolerance >\n            options.container.scrollLeft &&\n\n            // Check left boundary\n            el.offsetLeft + options.tolerance <\n            containerRect.width + options.container.scrollLeft &&\n\n            // // Check top boundary\n            el.offsetTop + options.tolerance <\n            containerRect.height + options.container.scrollTop\n        );\n    }\n\n    return visible;\n}\n\nexport default insideViewport;\n","import insideViewport from './insideViewport';\n\nexport default function eventHandler(trackedElements = {}, options = { tolerance: 0 }) {\n    const selectors = Object.keys(trackedElements);\n\n    if (!selectors.length) return;\n\n    selectors.forEach((selector) => {\n        trackedElements[selector].nodes.forEach((item) => {\n            if (insideViewport(item.node, options)) {\n                item.wasVisible = item.isVisible;\n                item.isVisible = true;\n            } else {\n                item.wasVisible = item.isVisible;\n                item.isVisible = false;\n            }\n            if (item.isVisible === true && item.wasVisible === false) {\n                if (typeof trackedElements[selector].enter === 'function') {\n                    trackedElements[selector].enter(item.node);\n                }\n            }\n            if (item.isVisible === false && item.wasVisible === true) {\n                if (typeof trackedElements[selector].leave === 'function') {\n                    trackedElements[selector].leave(item.node);\n                }\n            }\n        });\n    });\n}\n","import scrollHandler from '../helpers/scrollHandler';\n\n/**\n * Debounces the scroll event to avoid performance issues\n *\n * @return {void}\n */\nfunction debouncedScroll() {\n    let timeout;\n\n    return () => {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            scrollHandler(this.trackedElements, this.options);\n        }, this.options.throttle);\n    };\n}\n\nexport default debouncedScroll;\n","/**\n * Removes the scroll event handler\n *\n * @return {void}\n */\nfunction destroy() {\n    this.options.container.removeEventListener('scroll', this._scroll);\n    window.removeEventListener('resize', this._scroll);\n    this.attached = false;\n}\n\nexport default destroy;\n","/**\n * Stops tracking elements matching a CSS selector. If a selector has no\n * callbacks it gets removed.\n *\n * @param {string} event The event you want to stop tracking (enter or leave)\n * @param {string} selector The CSS selector you want to stop tracking\n * @return {void}\n */\nfunction off(event, selector) {\n    if (this.trackedElements.hasOwnProperty(selector)) {\n        if (this.trackedElements[selector][event]) {\n            delete this.trackedElements[selector][event];\n        }\n    }\n    if (!this.trackedElements[selector].enter && !this.trackedElements[selector].leave) {\n        delete this.trackedElements[selector];\n    }\n}\n\nexport default off;\n","/**\n * Starts tracking elements matching a CSS selector\n *\n * @param {string} event The event you want to track (enter or leave)\n * @param {string} selector The element you want to track\n * @param {function} callback The callback function to handle the event\n * @return {void}\n */\nfunction on(event, selector, callback) {\n    const allowed = ['enter', 'leave'];\n\n    if (!event) throw new Error('No event given. Choose either enter or leave');\n    if (!selector) throw new Error('No selector to track');\n    if (allowed.indexOf(event) < 0) throw new Error(`${event} event is not supported`);\n\n    if (!this.trackedElements.hasOwnProperty(selector)) {\n        this.trackedElements[selector] = {};\n    }\n\n    this.trackedElements[selector].nodes = [];\n\n    for (let i = 0; i < document.querySelectorAll(selector).length; i++) {\n        const item = {\n            isVisible: false,\n            wasVisible: false,\n            node: document.querySelectorAll(selector)[i]\n        };\n\n        this.trackedElements[selector].nodes.push(item);\n    }\n\n    if (typeof callback === 'function') {\n        this.trackedElements[selector][event] = callback;\n    }\n}\n\nexport default on;\n","/**\n * Observes DOM mutations and runs a callback function when\n * detecting one.\n *\n * @param {node} obj The DOM node you want to observe\n * @param {function} callback The callback function you want to call\n * @return {void}\n */\nfunction observeDOM(obj, callback) {\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n    const eventListenerSupported = window.addEventListener;\n\n    if (MutationObserver) {\n        const obs = new MutationObserver((mutations) => {\n            if (mutations[0].addedNodes.length || mutations[0].removedNodes.length) callback();\n        });\n\n        obs.observe(obj, {\n            childList: true,\n            subtree: true\n        });\n    } else if (eventListenerSupported) {\n        obj.addEventListener('DOMNodeInserted', callback, false);\n        obj.addEventListener('DOMNodeRemoved', callback, false);\n    }\n}\n\nexport default observeDOM;\n","// Methods\nimport attach from './methods/attach';\nimport debouncedScroll from './methods/debouncedScroll';\nimport destroy from './methods/destroy';\nimport off from './methods/off';\nimport on from './methods/on';\n\n// Helpers\nimport observeDOM from './helpers/observeDOM';\nimport insideViewport from './helpers/insideViewport';\n\n/**\n * Detects wether DOM nodes enter or leave the viewport\n *\n * @constructor\n * @param {object} options The configuration object\n */\nfunction OnScreen(options = { tolerance: 0, debounce: 100, container: window }) {\n    this.options = {};\n    this.trackedElements = {};\n\n    Object.defineProperties(this.options, {\n        container: {\n            configurable: false,\n            enumerable: false,\n            get() {\n                let container;\n\n                if (typeof options.container === 'string') {\n                    container = document.querySelector(options.container);\n                } else if (options.container instanceof HTMLElement) {\n                    container = options.container;\n                }\n\n                return container || window;\n            },\n            set(value) {\n                options.container = value;\n            }\n        },\n        debounce: {\n            get() {\n                return parseInt(options.debounce, 10) || 100;\n            },\n            set(value) {\n                options.debounce = value;\n            }\n        },\n        tolerance: {\n            get() {\n                return parseInt(options.tolerance, 10) || 0;\n            },\n            set(value) {\n                options.tolerance = value;\n            }\n        }\n    });\n\n    Object.defineProperty(this, '_scroll', {\n        enumerable: false,\n        configurable: false,\n        writable: false,\n        value: this._debouncedScroll.call(this)\n    });\n\n    observeDOM(document.querySelector('body'), () => {\n        Object.keys(this.trackedElements).forEach((element) => {\n            this.on('enter', element);\n            this.on('leave', element);\n        });\n    });\n\n    this.attach();\n}\n\nObject.defineProperties(OnScreen.prototype, {\n    _debouncedScroll: {\n        configurable: false,\n        writable: false,\n        enumerable: false,\n        value: debouncedScroll\n    },\n    attach: {\n        configurable: false,\n        writable: false,\n        enumerable: false,\n        value: attach\n    },\n    destroy: {\n        configurable: false,\n        writable: false,\n        enumerable: false,\n        value: destroy\n    },\n    off: {\n        configurable: false,\n        writable: false,\n        enumerable: false,\n        value: off\n    },\n    on: {\n        configurable: false,\n        writable: false,\n        enumerable: false,\n        value: on\n    }\n});\n\nOnScreen.check = insideViewport;\n\nexport default OnScreen;\n"],"names":[],"mappings":"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"}